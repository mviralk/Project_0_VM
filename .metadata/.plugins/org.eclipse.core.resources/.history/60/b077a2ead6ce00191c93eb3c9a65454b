package com.mistbank.main;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Scanner;

import org.apache.log4j.Logger;

import com.mistbank.exceptions.BusinessException;
import com.mistbank.model.CheckingAccounts;
import com.mistbank.model.MistUser;
import com.mistbank.model.SavingAccounts;
import com.mistbank.service.SHA256;
import com.mistbank.service.impl.MistbankServiceImpl;

public class MistbankMain {

	private static final Logger log = Logger.getLogger(MistbankMain.class);

	public static void main(String[] args) {

		Scanner scanner = new Scanner(System.in);

		log.info("              Welcome to MistBank V1.0              ");
		log.info("====================================================");
		int ch = 0;

		do {
			log.info("Your Banking Options");
			log.info("1] Login");
			log.info("2] Register");
			log.info("3] EXIT");
			log.info("Above are you choices(1-3) ");

			try {
				ch = Integer.parseInt(scanner.nextLine());
				// Login
				switch (ch) {
				case 1:
					MistUser loginconf = new MistUser();
					
					log.info("Please enter your Login details");
					log.info("Username: ");
					String usernamelogin = scanner.nextLine();
					// String usernamelogin = scanner.nextLine();
					log.info("Password: ");
					String passwordlogin = scanner.nextLine();
					String passwordlog =new SHA256().sha256(passwordlogin);
					loginconf.setUsername(usernamelogin);
					loginconf.setPassword(passwordlog);
					
					MistbankServiceImpl service = new MistbankServiceImpl();
					
					try {
						loginconf = service.userauth(loginconf);
						
					
					
					log.info(loginconf);
					
						int acct = 0;
						int logout = 0;
						do {
							log.info("-------------------------------------------");
							log.info("You have logged in successfully!");
							log.info("Enter to see the details");
							log.info("1] Savings");
							log.info("2] Checkings");
							log.info("3] Logout");

							try {
								acct = Integer.parseInt(scanner.nextLine());
								
								switch (acct) {
								case 1:
									break;
								case 2:
									break;
								case 3:
									ch=0;
									break;
								default:
									break;
								}
							} catch (NumberFormatException e) {
								log.info("Please select choices from above only");
							}

						} while (logout != 3);
						log.info("Username or Password is Invalid. Please retry");
					} catch (BusinessException e) {
						log.info(e.getMessage());
					}
						
					break;

				//////////// Register
				case 2:
					int register = 0;
					do {
						log.info("Thank you for chosing MistBank");
						log.info("Which account do you want to create: ");
						log.info("1] Savings");
						log.info("2] Checking");
						log.info("3] Back");

						try {

							register = Integer.parseInt(scanner.nextLine());
							switch (register) {
							case 1:
								SavingAccounts userdetails = new SavingAccounts();
								// savings account creation
								
								log.info("Enter Username: ");
								String username = scanner.nextLine();
								
								log.info("Enter Password: ");
								String userpassword = scanner.nextLine();
								String password = new SHA256().sha256(userpassword);
								log.info("Enter Firstname: ");
								String firstname = scanner.nextLine();
								log.info("Enter Lastname: ");
								String lastname = scanner.nextLine();
								log.info("Enter Date of Birth (MM-DD-YYY): ");
								String dob = scanner.nextLine();
								SimpleDateFormat sdf = new SimpleDateFormat("MM-dd-yyyy");
								sdf.setLenient(false);
								try {
									sdf.parse(dob);
								} catch (ParseException e) {
									log.info("Enter date in MM-DD-YYYY format");
								}

								log.info("Enter SSN (9 digits): ");
								long ssn = Long.parseLong(scanner.nextLine());
								boolean b = false;
								do {
									
								}while(!b);
								if((""+(ssn)).matches("[0-9]{9}")) {
									b=true;
									
								}else {
									log.info("Please enter 9 digits ONLY no dashes required.");
								}
								
								log.info("Enter Phone number (xxx-xxx-xxxx): ");
								long phonenumber = Long.parseLong(scanner.nextLine());
								
								boolean b1 = false;
								if((""+(phonenumber)).matches("[0-9]{3}-[0-9]{3}-[0-9]{4}")) {
									b1=true;
								}else {
									log.info("Invalid phone number entered");
								}
								/////////////////////////////////////////////////

								try {
									userdetails = new SavingAccounts(username, password, firstname, lastname,
											sdf.parse(dob), ssn, phonenumber);

								} catch (ParseException e) {
									log.info("Invalid data Entered");
								}

								MistbankServiceImpl service1 = new MistbankServiceImpl();
								try {
									userdetails = service1.useraccountcreatesavings(userdetails);
								} catch (BusinessException e) {
									log.info("Registration failed");
								}

								if (userdetails.getSerialnum() != 0) {
									log.info("Account registered successfully with following details");
									log.info(userdetails);
								}

								break;
								
								///////////////////////////////////////////////////////////////////////
								//checking registration
							case 2:
								CheckingAccounts userdetails1 = new CheckingAccounts();
								// savings account creation
								
								log.info("Enter Username: ");
								String username1 = scanner.nextLine();
								log.info("Enter Password: ");
								String userpassword1 = scanner.nextLine();
								String password1 = new SHA256().sha256(userpassword1);
								log.info("Enter Firstname: ");
								String firstname1 = scanner.nextLine();
								log.info("Enter Lastname: ");
								String lastname1 = scanner.nextLine();
								log.info("Enter Date of Birth (MM-DD-YYY): ");
								String dob1 = scanner.nextLine();
								SimpleDateFormat sdf1 = new SimpleDateFormat("MM-dd-yyyy");
								sdf1.setLenient(false);
								try {
									sdf1.parse(dob1);
								} catch (ParseException e) {
									log.info("Enter date in MM-DD-YYYY format");
								}

								log.info("Enter SSN (9 digits): ");
								long ssn1;
								while(!(""+(ssn1  = Long.parseLong(scanner.nextLine()))).matches("[0-9]{9}")) {
									log.info("Please enter 9 digits ONLY no dashes required.");
								}
								log.info("Enter Phone number (xxx-xxx-xxxx): ");
								long phonenumber1;
								
								while(!(""+(phonenumber1 = Long.parseLong(scanner.nextLine()))).matches("[0-9]{3}-[0-9]{3}-[0-9]{4}")) {
									log.info("Invalid phone number entered");
								}
								
								
								try {
									userdetails1 = new CheckingAccounts(username1, password1, firstname1, lastname1,
											sdf1.parse(dob1), ssn1, phonenumber1);
									
								} catch (ParseException e) {
									log.info("Invalid data Entered");
								}
								
								MistbankServiceImpl service2 = new MistbankServiceImpl();
								try {
									userdetails1 = service2.useraccountcreatechecking(userdetails1);
								} catch (BusinessException e) {
									log.info("Registration failed");
								}

								if (userdetails1.getSerialnum() != 0) {
									log.info("Account registered successfully with following details");
									log.info(userdetails1);
								}
								break;
							case 3:
								log.info("Thank you for using our services");
								break;
							default:
								log.info("Please select proper selection");
								break;
							}
						} catch (NumberFormatException e) {
							log.info("Choices should be number(1-3) Only");

						}

					} while (register != 3);

					break;
				case 3:
					
					log.info("You have logged out successfully");
					break;
				default:
					log.info("Please Select appropriate Banking option.");
					break;
				}
			} catch (NumberFormatException e) {
				log.info("Choices should be number(1-3) ONLY");

			}

		} while (ch != 3);

		scanner.close();

	}

}
